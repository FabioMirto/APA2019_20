#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define NOME_FILE1 "sequenze.txt"
#define NOME_FILE2 "testo.txt"
#define CHAR 5
#define MAX 20
#define RIGA 200
#define PAR 25

typedef struct {
    char sequenza[CHAR+1];
} dat;

typedef struct {
    char parola[PAR+1];
}test ;

typedef struct {
    char parola[PAR+1];
    char par[PAR+1];
    int position;
}out ;


int main() {
    int i = 0, j, k, p, prova, l, m, num = 0, countTot = 0, countPunct = 0, countWords = 0, len = 0, lun = 0, lung = 0;
    char riga[26], parola[26];
    char ch;
    test testo[RIGA];
    dat dati[MAX];
    out output[100];
    FILE *fp1, *fp2;
    fp1 = fopen(NOME_FILE1, "r");
    fp2 = fopen(NOME_FILE2, "r");

    if (fp1 == NULL || fp2 == NULL) {
        printf("ERRORE NELL'APERTURA DEL FILE");
        EXIT_FAILURE;
    }
    fscanf(fp1, "%d", &num);
    for (i = 0; i < num; i++) {
        fscanf(fp1, "%s", dati[i].sequenza);
        lung = strlen(dati[i].sequenza);
        for (int l = 0; l < lung; l++) {
            dati[i].sequenza[l] = tolower(dati[i].sequenza[l]);
        }
       // printf("%s\n", dati[i].sequenza);
    }
    m = 0;
    i = 0;
    while (!feof(fp2)) {
        fscanf(fp2, "%s", testo[m].parola);

        for (int n = 0; n < strlen(testo[m].parola); n++) {
            testo[m].parola[n] = tolower(testo[m].parola[n]);
                        if (ispunct(testo[m].parola[n]) != 0) {
                            if(testo[m].parola[n]  == '\''){
                                i++;
                                testo[m].parola[n] = ' ';
                                sscanf(testo[m].parola, "%s%s", riga, parola);
                                strcpy(testo[m].parola, riga);
                                strcpy(testo[m+1].parola, parola);
                               m++;
                            }
               //testo[m].parola[n] = ' ';
            }
            countWords++;

        }


        m++;
    }

    for (int i1 = 0; i1 < m ; ++i1) {
        printf("%s ", testo[i1].parola);
    }
    printf("%d", i);
   //printf("%s\n", testo[15].parola);
    printf("\n");
  /*  for (l = 0; l < m; ++l) {
        for (i = 0; i < strlen(testo[l].parola); i++) {
            if (ispunct(testo[l].parola[i]) != 0 && isalnum(testo[l].parola[i + 1]) != 0) {
                strcpy(output[i].par, &testo[l].parola[i + 2]);
              //  printf("%s\n", output[l].par);
                countPunct++;
            }
        }

    }
    l = 0;
    i = 0;
    for (l = 0; l < countPunct; l++) {
        lung = strlen(output[l].par);
        for (i = 0; i < lung; i++) {
            output[l].par[i] = tolower(output[l].par[i]);
        }
       // printf("%s\n", output[l].par);
    }

 */   countWords = countWords + countPunct;
  /*  for (int i1 = 0; i1 < m; ++i1) {
       // printf("%s ", testo[i1].parola);
            sscanf(testo[i1].parola, "%s", output[i1].parola);
            countTot++;
        }
  //  printf("%d\n", countTot);
    for (int j1 = 0; j1 < countTot; ++j1) {
        printf("%s ", output[j1].parola);
    }
  //  printf("il numero delle parole Ã¨ %d\n", countTot);
    l = 0;
    lung = 0;
    for (i = 0; i < countWords; i++) {
        lung = strlen(output[i].parola);
        for (l = 0; l < lung; l++) {
            output[i].parola[l] = tolower(output[i].parola[l]);
        }
       // printf("%s\n", output[i].parola);
    }*/
p = 0;
    for (l = 0; l < num; l++) {
        p=0;
        for (j = 0; j < countWords; j++) {
            // lun = strlen(dati[l].sequenza);
                    if (strstr(testo[j].parola, dati[l].sequenza) != 0) {
                        if (p >= 0) {
                            printf("la sequenza %s e' contenuta in %s (in posizione %d)\n", dati[l].sequenza,
                                   testo[j].parola,
                                   j + 1);
                            p++;

                        }
                    }
        }
        }
        return 0;

}
